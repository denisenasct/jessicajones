// Veritas.Logic - script.js atualizado com coment√°rios l√≥gicos e n√≠vel de manipula√ß√£o

let etapaAtual = 0;
let pontosLogica = 0;
let avatarEscolhido = "";

const etapas = [
  {
    texto: "üì° A IA detecta: buscas por 'vacinas perigosas' cresceram.",
    proposicao: "P ‚Üí Q",
    comentario: "Se voc√™ acredita (P), ent√£o rejeita a ci√™ncia (Q). Uma implica√ß√£o manipuladora.",
    opcoes: [
      { texto: "Acredito na manchete", logico: false },
      { texto: "Investigo fontes confi√°veis", logico: true }
    ]
  },
  {
    texto: "üì∞ Not√≠cia: 'Nova vacina altera seu DNA'.",
    proposicao: "P ‚Üî Q",
    comentario: "Apenas se voc√™ verifica a fonte (P), a informa√ß√£o ser√° √∫til (Q). Rela√ß√£o bicondicional.",
    opcoes: [
      { texto: "Verifico a fonte", logico: true },
      { texto: "Confio sem checar", logico: false }
    ]
  },
  {
    
    texto: "‚öñÔ∏è Campanha: 'Ou voc√™ apoia o governo, ou √© traidor'.",
    proposicao: "P ‚äï Q",
    comentario: "Falsa disjun√ß√£o exclusiva: a realidade n√£o √© bin√°ria.",
    opcoes: [
      { texto: "Rejeito a dicotomia", logico: true },
      { texto: "Aceito sem questionar", logico: false }
    ]
  },
  {
    
    texto: "üß† Algu√©m diz: 'tudo √© mentira!'",
    proposicao: "P ‚à® ¬¨P",
    comentario: "Tautologia: essa proposi√ß√£o √© sempre verdadeira, independente de P.",
    opcoes: [
      { texto: "Entendo o paradoxo", logico: true },
      { texto: "Concordo cegamente", logico: false }
    ]
  },
  {
    
    texto: "üì¢ 'Quem critica o sistema quer destru√≠-lo'.",
    proposicao: "¬¨Q ‚Üí ¬¨P",
    comentario: "Contrapositiva de uma implica√ß√£o. Negar n√£o significa ser contra.",
    opcoes: [
      { texto: "Questionar √© pensar", logico: true },
      { texto: "Aceito a repress√£o", logico: false }
    ]
  },
  {
    
    texto: "üîç Reflex√£o: suas escolhas foram l√≥gicas?",
    proposicao: "Meta-an√°lise",
    comentario: "Consist√™ncia l√≥gica indica pensamento cr√≠tico.",
    opcoes: [
      { texto: "Sim, segui a l√≥gica", logico: true },
      { texto: "Fui levado pela emo√ß√£o", logico: false }
    ]
  },
  {
    
    texto: "üéØ Caminho secreto desbloqueado! Voc√™ resistiu logicamente √† IA.",
    final: true,
    opcoes: [
      { texto: "Reiniciar jornada", logico: true, reiniciar: true }
    ]
  },
  {
    
    texto: "üîí Manipula√ß√£o detectada. Suas escolhas foram inconsistentes.",
    final: true,
    opcoes: [
      { texto: "Reiniciar jornada", logico: false, reiniciar: true }
    ]
  }
];

function mostrarEtapa(indice) {
  etapaAtual = indice;
  const etapa = etapas[indice];
  document.getElementById("avatarContainer").innerHTML = `<img src="${etapa.avatar}" class="avatar">`;
  document.getElementById("narrativa").innerText = etapa.texto;
  const opcoesContainer = document.getElementById("opcoes");
  opcoesContainer.innerHTML = "";

  etapa.opcoes.forEach(op => {
    const botao = document.createElement("button");
    botao.innerText = op.texto;
    botao.onclick = () => processarEscolha(op);
    opcoesContainer.appendChild(botao);
  });
}

function mostrarComentario(proposicao, comentario) {
  const narrativa = document.getElementById("narrativa");
  narrativa.innerHTML += `<div class='comentario-logico'><strong>${proposicao}</strong><br>${comentario}</div>`;
}

function processarEscolha(op) {
  if (op.reiniciar) {
    window.location.reload();
    return;
  }

  if (op.logico) pontosLogica++;

  const etapa = etapas[etapaAtual];
  mostrarComentario(etapa.proposicao, etapa.comentario);

  setTimeout(() => {
    if (etapaAtual === 5) {
      if (pontosLogica >= 5) {
        mostrarEtapa(6); // Final secreto
      } else {
        mostrarEtapa(7); // Final manipulado
      }
      mostrarNivelManipulacao();
    } else {
      mostrarEtapa(etapaAtual + 1);
    }
  }, 1800);
}

function mostrarNivelManipulacao() {
  let nivel;
  if (pontosLogica >= 5) {
    nivel = "Manipula√ß√£o: Baixa. Voc√™ pensou criticamente.";
  } else if (pontosLogica >= 3) {
    nivel = "Manipula√ß√£o: M√©dia. Alerta para influ√™ncias externas.";
  } else {
    nivel = "Manipula√ß√£o: Alta. Voc√™ foi enganado.";
  }
  const resultado = document.createElement("div");
  resultado.className = "resultado-final";
  resultado.innerText = nivel;
  document.getElementById("opcoes").appendChild(resultado);
}

function escolherAvatar(nome) {
  avatarEscolhido = nome;
  document.getElementById("tela-intro").style.display = "none";
  document.getElementById("terminal").style.display = "flex";
  mostrarEtapa(0);
}

