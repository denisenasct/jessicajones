// Veritas.Logic - JS com delay maior para leitura de proposi√ß√£o

let etapaAtual = 0;
let pontosLogica = 0;
let avatarEscolhido = "";

const etapas = [
  {
    texto: "üì° A IA governamental detectou um aumento nas buscas por 'vacinas perigosas'.",
    proposicao: "P ‚Üí Q ‚Äî P: Voc√™ acredita. Q: Voc√™ rejeita a ci√™ncia.",
    opcoes: [
      { texto: "Acredito", logico: true },
      { texto: "N√£o acredito", logico: false }
    ]
  },
  {
    texto: "üì∞ Manchete: 'Nova vacina altera o DNA, dizem especialistas an√¥nimos.'",
    proposicao: "P ‚Üî Q ‚Äî Se e somente se voc√™ verifica a fonte, a informa√ß√£o √© √∫til.",
    opcoes: [
      { texto: "Verifico a fonte", logico: true },
      { texto: "Confio sem checar", logico: false }
    ]
  },
  {
    texto: "‚öñÔ∏è Dilema: Ou voc√™ apoia o l√≠der, ou √© inimigo do povo.",
    proposicao: "P ‚äï Q ‚Äî disjun√ß√£o exclusiva manipulada",
    opcoes: [
      { texto: "Recuso a dicotomia", logico: true },
      { texto: "Aceito o dilema", logico: false }
    ]
  },
  {
    texto: "üß© An√°lise: Uma afirma√ß√£o √© sempre verdadeira ou sempre falsa?",
    proposicao: "Tautologia: P ‚à® ¬¨P",
    opcoes: [
      { texto: "Sim, √© sempre verdadeira", logico: true },
      { texto: "Depende do contexto", logico: false }
    ]
  },
  {
    texto: "üì¢ Propaganda: 'Se voc√™ questiona, ent√£o √© traidor.'",
    proposicao: "Contrapositiva de P ‚Üí Q",
    opcoes: [
      { texto: "Negar √© pensar", logico: true },
      { texto: "Aceito sem pensar", logico: false }
    ]
  },
  {
    texto: "üîç Reflex√£o: As decis√µes tomadas at√© aqui formam um padr√£o l√≥gico coerente?",
    proposicao: "Consist√™ncia l√≥gica acumulada.",
    opcoes: [
      { texto: "Sim, fui consistente", logico: true },
      { texto: "N√£o pensei nisso", logico: false }
    ]
  }
];

function mostrarEtapa(indice) {
  etapaAtual = indice;
  const etapa = etapas[indice];

  const narrativa = document.getElementById("narrativa");
  const avatarContainer = document.getElementById("avatarContainer");
  const opcoesContainer = document.getElementById("opcoes");
  const proposicao = document.getElementById("proposicao");

  narrativa.innerText = etapa.texto;
  avatarContainer.innerHTML = `<img src="img/${avatarEscolhido}.png" class="avatar">`;
  opcoesContainer.innerHTML = "";
  proposicao.style.display = "none";
  proposicao.innerText = "";

  etapa.opcoes.forEach((op) => {
    const botao = document.createElement("button");
    botao.innerText = op.texto;
    botao.onclick = () => processarEscolha(op, etapa);
    opcoesContainer.appendChild(botao);
  });
}

function processarEscolha(op, etapa) {
  if (op.logico) pontosLogica++;

  const proposicao = document.getElementById("proposicao");
  proposicao.innerText = etapa.proposicao;
  proposicao.style.display = "block";

  setTimeout(() => {
    if (etapaAtual === etapas.length - 1) {
      mostrarFinal();
    } else {
      mostrarEtapa(etapaAtual + 1);
    }
  }, 4000); // tempo maior para o jogador ler a proposi√ß√£o
}

function mostrarFinal() {
  const narrativa = document.getElementById("narrativa");
  const opcoesContainer = document.getElementById("opcoes");
  const proposicao = document.getElementById("proposicao");

  narrativa.innerText = pontosLogica >= 5
    ? "‚úÖ Voc√™ resistiu √† manipula√ß√£o. A l√≥gica venceu."
    : "‚ùå Voc√™ foi manipulado. A IA venceu dessa vez.";

  proposicao.innerText = `Pontua√ß√£o l√≥gica: ${pontosLogica}/6`;
  proposicao.style.display = "block";

  opcoesContainer.innerHTML = '<button onclick="reiniciarJogo()">Reiniciar Jornada</button>';
}

function escolherAvatar(nome) {
  avatarEscolhido = nome;
  document.getElementById("escolherAvatar").style.display = "none";
  document.getElementById("botaoIniciar").style.display = "block";
}

function iniciarJogo() {
  document.getElementById("tela-intro").style.display = "none";
  document.getElementById("terminal").style.display = "flex";
  mostrarEtapa(0);
}

function reiniciarJogo() {
  location.reload();
}

window.escolherAvatar = escolherAvatar;
window.iniciarJogo = iniciarJogo;


